basePath: /apis
definitions:
  examples.FailedCommonResponse:
    properties:
      payload: {}
      status:
        $ref: '#/definitions/examples.FailedStatusMessage'
    type: object
  examples.FailedStatusMessage:
    properties:
      code:
        example: "0001"
        type: string
      description:
        type: string
      error:
        example: error message
        type: string
      message:
        example: Failed
        type: string
      service:
        type: string
    type: object
  examples.SuccessAccountsGetAllResponse:
    properties:
      payload:
        items:
          $ref: '#/definitions/models.AccountModel'
        type: array
      status:
        $ref: '#/definitions/examples.SuccessStatusMessage'
    type: object
  examples.SuccessAccountsProfileResponse:
    properties:
      payload:
        $ref: '#/definitions/response.AccountResponseModel'
      status:
        $ref: '#/definitions/examples.SuccessStatusMessage'
    type: object
  examples.SuccessLoginResponse:
    properties:
      payload:
        $ref: '#/definitions/response.LoginResponse'
      status:
        $ref: '#/definitions/examples.SuccessStatusMessage'
    type: object
  examples.SuccessRegisterAccountResponse:
    properties:
      payload:
        type: string
      status:
        $ref: '#/definitions/examples.SuccessStatusMessage'
    type: object
  examples.SuccessStatusMessage:
    properties:
      code:
        example: "0000"
        type: string
      description:
        type: string
      message:
        example: Success
        type: string
      service:
        type: string
    type: object
  models.AccountModel:
    properties:
      age:
        example: 25
        type: integer
      blogs:
        items:
          $ref: '#/definitions/models.BlogModel'
        type: array
      created_at:
        type: string
      email:
        example: example@gmail.com
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      is_deleted:
        example: false
        type: boolean
      password:
        type: string
      updated_at:
        type: string
      username:
        example: users
        type: string
    required:
    - age
    - email
    - username
    type: object
  models.BlogModel:
    properties:
      account_id:
        example: 1
        type: integer
      created_at:
        type: string
      description:
        example: blog description
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      is_deleted:
        example: false
        type: boolean
      name:
        example: blog
        type: string
      updated_at:
        type: string
    required:
    - name
    type: object
  requests.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.RegisterRequest:
    properties:
      age:
        example: 25
        maximum: 130
        minimum: 0
        type: integer
      email:
        example: example@gmail.com
        type: string
      password:
        example: "12345678"
        maxLength: 20
        minLength: 8
        type: string
      username:
        example: user
        type: string
    required:
    - email
    - password
    - username
    type: object
  response.AccountResponseModel:
    properties:
      age:
        example: 25
        type: integer
      blogs:
        items:
          $ref: '#/definitions/models.BlogModel'
        type: array
      created_at:
        type: string
      email:
        example: example@gmail.com
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      is_deleted:
        example: false
        type: boolean
      updated_at:
        type: string
      username:
        example: users
        type: string
    type: object
  response.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:6476
info:
  contact:
    email: Damon1FX@gmail.com
    name: Heepoke
    url: https://github.com/HEEPOKE
  description: This is a Go Fiber Hexagonal API server.
  title: Go Fiber Hexagonal API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Get List All Accounts Data
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/examples.SuccessAccountsGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/examples.FailedCommonResponse'
      summary: Get List All Accounts Data
      tags:
      - Accounts
  /accounts/profile:
    get:
      consumes:
      - application/json
      description: Get Accounts Profile
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/examples.SuccessAccountsProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/examples.FailedCommonResponse'
      summary: Get Accounts Profile
      tags:
      - Accounts
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: Login Request
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/examples.SuccessLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/examples.FailedCommonResponse'
      summary: login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register account
      parameters:
      - description: Register Request
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/examples.SuccessRegisterAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/examples.FailedCommonResponse'
      summary: register account
      tags:
      - Auth
schemes:
- http
- https
swagger: "2.0"
