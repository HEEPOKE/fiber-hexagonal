// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Heepoke",
            "url": "https://github.com/HEEPOKE",
            "email": "Damon1FX@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Get List All Accounts Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get List All Accounts Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/examples.SuccessAccountsGetAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/examples.FailedCommonResponse"
                        }
                    }
                }
            }
        },
        "/accounts/profile": {
            "get": {
                "description": "Get Accounts Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get Accounts Profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/examples.SuccessAccountsProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/examples.FailedCommonResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/examples.SuccessLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/examples.FailedCommonResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "register account",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/examples.SuccessRegisterAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/examples.FailedCommonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "examples.FailedCommonResponse": {
            "type": "object",
            "properties": {
                "payload": {},
                "status": {
                    "$ref": "#/definitions/examples.FailedStatusMessage"
                }
            }
        },
        "examples.FailedStatusMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "0001"
                },
                "description": {
                    "type": "string"
                },
                "error": {
                    "type": "string",
                    "example": "error message"
                },
                "message": {
                    "type": "string",
                    "example": "Failed"
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "examples.SuccessAccountsGetAllResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AccountModel"
                    }
                },
                "status": {
                    "$ref": "#/definitions/examples.SuccessStatusMessage"
                }
            }
        },
        "examples.SuccessAccountsProfileResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/response.AccountResponseModel"
                },
                "status": {
                    "$ref": "#/definitions/examples.SuccessStatusMessage"
                }
            }
        },
        "examples.SuccessLoginResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/response.LoginResponse"
                },
                "status": {
                    "$ref": "#/definitions/examples.SuccessStatusMessage"
                }
            }
        },
        "examples.SuccessRegisterAccountResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/examples.SuccessStatusMessage"
                }
            }
        },
        "examples.SuccessStatusMessage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "0000"
                },
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "models.AccountModel": {
            "type": "object",
            "required": [
                "age",
                "email",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 25
                },
                "blogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlogModel"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_deleted": {
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "users"
                }
            }
        },
        "models.BlogModel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "account_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "blog description"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_deleted": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "blog"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "maximum": 130,
                    "minimum": 0,
                    "example": 25
                },
                "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "response.AccountResponseModel": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 25
                },
                "blogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlogModel"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_deleted": {
                    "type": "boolean",
                    "example": false
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "users"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:6476",
	BasePath:         "/apis",
	Schemes:          []string{"http", "https"},
	Title:            "Go Fiber Hexagonal API",
	Description:      "This is a Go Fiber Hexagonal API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
